using Newtonsoft.Json;
using ScrapperWebAPI.Models.BrandDtos;
using ScrapperWebAPI.Models.Zara;
using System.Net.Http;

namespace ScrapperWebAPI.Helpers;

public static class GetZaraCategories
{
    private static string base64 = "";

    public async static Task<List<BrandToListDto>> GetAll()
    {
        HttpClient _httpClient = new HttpClient();

        string url = "https://www.zara.com/az/ru/categories?categoryId=2536906&categorySeoId=640&ajax=true";
        var response = await _httpClient.GetAsync(url);
        if (!response.IsSuccessStatusCode)
        {
            throw new Exception();
        }
        string json = await response.Content.ReadAsStringAsync();
        ZaraCategoryRoot data = JsonConvert.DeserializeObject<ZaraCategoryRoot>(json);
        var result = new List<CategoryWithSubcategories>();
        var categories = new List<BrandToListDto>();
        foreach (var cat in data.Categories)
        {
            if (cat.Subcategories != null && cat.Subcategories.Count > 0)
            { 
                foreach (var sub in cat.Subcategories)
                {
                    categories.Add(new BrandToListDto
                    {
                        Name = cat.SectionName + "-" + sub.Name,
                        Type = "category",
                        Img = base64

                    });
                }
            }
        }
        return categories;
    }

}
